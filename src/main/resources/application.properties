
spring.profiles.include=

# 주석
# key = value

server.port=80

# 사용자 생성 키
my.message.hi = hello =O.O=

### 로그 설정
# 전역 레벨 설정 : ~ 이상만 출력
# debug는 보통 개발 시에만 사용
# 배포시 info / warn 이상 사용
logging.level.root=debug

## console 출력시 출력 format 설정
#logging.pattern.console=%msg%n

# Web 요청이 발생할 경우 설정
#logging.level.org.springframework.web=debug

# Web 요청이 발생한 경우 파라미터 출력
spring.mvc.log-request-details=true

#logging.level.com.iu.home.board.qna.QnaService=debug


### MyBatis 설정
# userName
spring.datasource.hikari.username=user01

#password
spring.datasource.hikari.password=user01

#url											#database 정보
#spring.datasource.url=jdbc:mariadb://localhost:3306/user01
spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/user01

#driver
### 배포할 때 사용							
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy


### Mapper 와 DAO가 다른 경로에 있을 때
### Mapper, Config 설정
						#classpath = src/main/resources
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
mybatis.config-location=classpath:database/config/config.xml


### JSP
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp


### SQL문 로그 출력
#connection open close 로깅 여부
logging.level.jdbc.connection=OFF
#SQL 조회된 결과 데이터를 table 형식의 로그로 출력
logging.level.jdbc.resultsettable=DEBUG
#ResultSet을 포함한 모든 JDBC 호출 정보를 출력 매우, 방대한 양의 로그가 생성
logging.level.jdbc.resultset=OFF 
#ResultSet을 포함한 모든 JDBC 호출 정보를 출력 매우, 방대한 양의 로그가 생성
logging.level.jdbc.audit=OFF
#SQL문과 해당 SQL을 실행한 시간 정보(milliseconds)를 포함
logging.level.jdbc.sqltiming=OFF
#SQL문만 로깅할지 여부, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문을 출력
logging.level.jdbc.sqlonly=OFF 
logging.level.jdbc=OFF
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=OFF


### ===============================================================================
### File Upload
# Multipart 사용 여부
spring.servlet.multipart.enabled=true
# 파일 하나 당 최대 크기 설정
spring.servlet.multipart.max-file-size=10MB
#총 파일 최대 크기 설정
spring.servlet.multipart.max-request-size=50MB
#업로드 파일 지정 | 하나만 가능
#spring.servlet.multipart.location=











